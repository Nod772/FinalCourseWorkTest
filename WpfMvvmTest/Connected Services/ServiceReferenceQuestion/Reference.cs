//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfMvvmTest.ServiceReferenceQuestion {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFLogic.DTO")]
    [System.SerializableAttribute()]
    public partial class QuestionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.AnswerOptionDTO[] AnswerOptionsDTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.TestDTO TestDTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextQuestionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.AnswerOptionDTO[] AnswerOptionsDTO {
            get {
                return this.AnswerOptionsDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerOptionsDTOField, value) != true)) {
                    this.AnswerOptionsDTOField = value;
                    this.RaisePropertyChanged("AnswerOptionsDTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.TestDTO TestDTO {
            get {
                return this.TestDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.TestDTOField, value) != true)) {
                    this.TestDTOField = value;
                    this.RaisePropertyChanged("TestDTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextQuestion {
            get {
                return this.TextQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.TextQuestionField, value) != true)) {
                    this.TextQuestionField = value;
                    this.RaisePropertyChanged("TextQuestion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFLogic.DTO")]
    [System.SerializableAttribute()]
    public partial class TestDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] QuestionsDTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.TeacherDTO TeasherDTOField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] QuestionsDTO {
            get {
                return this.QuestionsDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsDTOField, value) != true)) {
                    this.QuestionsDTOField = value;
                    this.RaisePropertyChanged("QuestionsDTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.TeacherDTO TeasherDTO {
            get {
                return this.TeasherDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.TeasherDTOField, value) != true)) {
                    this.TeasherDTOField = value;
                    this.RaisePropertyChanged("TeasherDTO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerOptionDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFLogic.DTO")]
    [System.SerializableAttribute()]
    public partial class AnswerOptionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO QuestionDTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isTrueAnswerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO QuestionDTO {
            get {
                return this.QuestionDTOField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionDTOField, value) != true)) {
                    this.QuestionDTOField = value;
                    this.RaisePropertyChanged("QuestionDTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextAnswer {
            get {
                return this.TextAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.TextAnswerField, value) != true)) {
                    this.TextAnswerField = value;
                    this.RaisePropertyChanged("TextAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTrueAnswer {
            get {
                return this.isTrueAnswerField;
            }
            set {
                if ((this.isTrueAnswerField.Equals(value) != true)) {
                    this.isTrueAnswerField = value;
                    this.RaisePropertyChanged("isTrueAnswer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeacherDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFLogic.DTO")]
    [System.SerializableAttribute()]
    public partial class TeacherDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PassedTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Test[] TestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PassedTest {
            get {
                return this.PassedTestField;
            }
            set {
                if ((object.ReferenceEquals(this.PassedTestField, value) != true)) {
                    this.PassedTestField = value;
                    this.RaisePropertyChanged("PassedTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Test[] Tests {
            get {
                return this.TestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsField, value) != true)) {
                    this.TestsField = value;
                    this.RaisePropertyChanged("Tests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Test", Namespace="http://schemas.datacontract.org/2004/07/BaseTestLib")]
    [System.SerializableAttribute()]
    public partial class Test : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Question[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Teasher TeasherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Teasher Teasher {
            get {
                return this.TeasherField;
            }
            set {
                if ((object.ReferenceEquals(this.TeasherField, value) != true)) {
                    this.TeasherField = value;
                    this.RaisePropertyChanged("Teasher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teasher", Namespace="http://schemas.datacontract.org/2004/07/BaseTestLib")]
    [System.SerializableAttribute()]
    public partial class Teasher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PassedTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Test[] TestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PassedTest {
            get {
                return this.PassedTestField;
            }
            set {
                if ((object.ReferenceEquals(this.PassedTestField, value) != true)) {
                    this.PassedTestField = value;
                    this.RaisePropertyChanged("PassedTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Test[] Tests {
            get {
                return this.TestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestsField, value) != true)) {
                    this.TestsField = value;
                    this.RaisePropertyChanged("Tests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/BaseTestLib")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.AnswerOption[] AnswerOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Test TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextQuestionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.AnswerOption[] AnswerOptions {
            get {
                return this.AnswerOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerOptionsField, value) != true)) {
                    this.AnswerOptionsField = value;
                    this.RaisePropertyChanged("AnswerOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Test Test {
            get {
                return this.TestField;
            }
            set {
                if ((object.ReferenceEquals(this.TestField, value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextQuestion {
            get {
                return this.TextQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.TextQuestionField, value) != true)) {
                    this.TextQuestionField = value;
                    this.RaisePropertyChanged("TextQuestion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerOption", Namespace="http://schemas.datacontract.org/2004/07/BaseTestLib")]
    [System.SerializableAttribute()]
    public partial class AnswerOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfMvvmTest.ServiceReferenceQuestion.Question QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isTrueAnswerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfMvvmTest.ServiceReferenceQuestion.Question Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextAnswer {
            get {
                return this.TextAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.TextAnswerField, value) != true)) {
                    this.TextAnswerField = value;
                    this.RaisePropertyChanged("TextAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTrueAnswer {
            get {
                return this.isTrueAnswerField;
            }
            set {
                if ((this.isTrueAnswerField.Equals(value) != true)) {
                    this.isTrueAnswerField = value;
                    this.RaisePropertyChanged("isTrueAnswer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceQuestion.IQuestionService")]
    public interface IQuestionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddQuestionResponse")]
        void AddQuestion(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/DeleteQuestion", ReplyAction="http://tempuri.org/IQuestionService/DeleteQuestionResponse")]
        void DeleteQuestion(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/DeleteQuestion", ReplyAction="http://tempuri.org/IQuestionService/DeleteQuestionResponse")]
        System.Threading.Tasks.Task DeleteQuestionAsync(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestion", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionResponse")]
        WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] GetQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestion", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionResponse")]
        System.Threading.Tasks.Task<WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[]> GetQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/QuestionFromIDTest", ReplyAction="http://tempuri.org/IQuestionService/QuestionFromIDTestResponse")]
        WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] QuestionFromIDTest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/QuestionFromIDTest", ReplyAction="http://tempuri.org/IQuestionService/QuestionFromIDTestResponse")]
        System.Threading.Tasks.Task<WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[]> QuestionFromIDTestAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionServiceChannel : WpfMvvmTest.ServiceReferenceQuestion.IQuestionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionServiceClient : System.ServiceModel.ClientBase<WpfMvvmTest.ServiceReferenceQuestion.IQuestionService>, WpfMvvmTest.ServiceReferenceQuestion.IQuestionService {
        
        public QuestionServiceClient() {
        }
        
        public QuestionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddQuestion(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher) {
            base.Channel.AddQuestion(teasher);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher) {
            return base.Channel.AddQuestionAsync(teasher);
        }
        
        public void DeleteQuestion(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher) {
            base.Channel.DeleteQuestion(teasher);
        }
        
        public System.Threading.Tasks.Task DeleteQuestionAsync(WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO teasher) {
            return base.Channel.DeleteQuestionAsync(teasher);
        }
        
        public WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] GetQuestion() {
            return base.Channel.GetQuestion();
        }
        
        public System.Threading.Tasks.Task<WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[]> GetQuestionAsync() {
            return base.Channel.GetQuestionAsync();
        }
        
        public WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[] QuestionFromIDTest(int id) {
            return base.Channel.QuestionFromIDTest(id);
        }
        
        public System.Threading.Tasks.Task<WpfMvvmTest.ServiceReferenceQuestion.QuestionDTO[]> QuestionFromIDTestAsync(int id) {
            return base.Channel.QuestionFromIDTestAsync(id);
        }
    }
}
